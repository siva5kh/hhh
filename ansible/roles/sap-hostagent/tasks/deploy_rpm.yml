# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Copy RPM based SAPHOSTAGENT to the target host
  copy:
    src: "{{ sap_hostagent_rpm_local_path }}/{{ sap_hostagent_rpm_file_name }}"
    dest: "{{ sap_hostagent_agent_tmp_directory }}/{{ sap_product_vars[sap_product_and_version].sap_hostagent_rpm_file_name }}"
  when: sap_hostagent_rpm_local_path is defined

- name: Ensure RPM file is installed
  yum:
    name: "{{ sap_hostagent_agent_tmp_directory }}/{{ sap_product_vars[sap_product_and_version].sap_hostagent_rpm_file_name }}"
    state: present
  when: sap_hostagent_rpm_local_path is defined
  register: rpm_is_installed
  until: rpm_is_installed is succeeded
  retries: 30
  delay: 10

- name: Ensure RPM file is installed
  yum:
    name: "{{ sap_hostagent_rpm_remote_path }}/{{ sap_product_vars[sap_product_and_version].sap_hostagent_rpm_file_name }}"
    state: present
  when: sap_hostagent_rpm_remote_path is defined
  register: rpm_is_installed
  until: rpm_is_installed is succeeded
  retries: 30
  delay: 10

# #Remove sapadm user and sapsys group created by the yum hostagent install command from above
# - name: Get sapadm user running processes
#   shell: "ps -ef | grep -v grep | grep -w sapadm | awk '{print $2}'"
#   register: running_processes

# - name: Force kill stuck processes
#   shell: "kill -9 {{ item }}"
#   with_items: "{{ running_processes.stdout_lines }}"

# - name: Remove the user "sapadm"
#   user:
#     name: sapadm
#     state: absent
#     remove: yes
#   run_once: true

# - name: check if "sapsys" group is empty
#   shell: |
#     lid -g sapsys
#   register: sapsys_group
#   failed_when: false

# - name: Remove the group "sapsys"
#   group:
#     name: sapsys
#     state: absent
#   when: sapsys_group.stdout == ""