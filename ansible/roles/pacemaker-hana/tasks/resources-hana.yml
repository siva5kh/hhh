# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- block:
  - name: define version-specific pacemaker variables
    set_fact:
      pacemaker_saphana_resource: 'SAPHana_{{ sap_hana_sid }}_HDB{{ sap_hana_instance_number }}-master'
      pacemaker_promote_resource: master
    when: pacemaker_major_version | int < 2

  - name: define version-specific pacemaker variables
    set_fact:
      pacemaker_saphana_resource: 'SAPHana_{{ sap_hana_sid }}_HDB{{ sap_hana_instance_number }}-clone'
      pacemaker_promote_resource: promotable
    when: pacemaker_major_version | int >= 2

  - name: create cloned sap hana topology resource
    command: >-
      pcs resource create SAPHanaTopology_{{ sap_hana_sid }}_HDB{{ sap_hana_instance_number }}
      SAPHanaTopology SID={{ sap_hana_sid }}
      InstanceNumber={{ sap_hana_instance_number }}
      op start timeout=600
      op stop timeout=300
      op monitor interval=10 timeout=600
      clone clone-max=2 clone-node-max=1 interleave=true
    register: pcs_command_status
    changed_when: pcs_command_status.rc == 0
    failed_when: pcs_command_status.rc != 0 and 'already exists' not in pcs_command_status.stderr

  - name: create promotable sap hana resource
    command: >-
      pcs resource create SAPHana_{{ sap_hana_sid }}_HDB{{ sap_hana_instance_number }}
      SAPHana SID={{ sap_hana_sid }}
      InstanceNumber={{ sap_hana_instance_number }}
      PREFER_SITE_TAKEOVER=true DUPLICATE_PRIMARY_TIMEOUT=7200 AUTOMATED_REGISTER=true
      op start timeout=3600
      op stop timeout=3600
      op monitor interval=61 role=Slave timeout=700
      op monitor interval=59 role=Master timeout=700
      op promote timeout=3600
      op demote timeout=3600
      {{ pacemaker_promote_resource }} meta notify=true clone-max=2 clone-node-max=1 interleave=true
    register: pcs_command_status
    changed_when: pcs_command_status.rc == 0
    failed_when: pcs_command_status.rc != 0 and 'already exists' not in pcs_command_status.stderr

  - name: create start order constraint
    command: >-
      pcs constraint order SAPHanaTopology_{{ sap_hana_sid }}_HDB{{ sap_hana_instance_number }}-clone
      then {{ pacemaker_saphana_resource }} symmetrical=false
    register: pcs_command_status
    changed_when: pcs_command_status.rc == 0
    failed_when: pcs_command_status.rc != 0 and 'already exists' not in pcs_command_status.stderr

  - name: create colocation constraint
    command: >-
      pcs constraint colocation add rsc_vip_gcp-primary with master
      {{ pacemaker_saphana_resource }} 2000
    when: not sap_use_lb
    register: pcs_command_status
    changed_when: pcs_command_status.rc == 0
    failed_when: pcs_command_status.rc != 0 and 'already exists' not in pcs_command_status.stderr

  - name: create colocation constraint
    command: >-
      pcs constraint colocation add rsc_healthcheck-primary with master
      {{ pacemaker_saphana_resource }} 2000
    when: sap_use_lb
    register: pcs_command_status
    changed_when: pcs_command_status.rc == 0
    failed_when: pcs_command_status.rc != 0 and 'already exists' not in pcs_command_status.stderr

  - name: create vip group constraint
    command: >-
      pcs constraint colocation add g-primary with master
      {{ pacemaker_saphana_resource }} 4000
    register: pcs_command_status
    changed_when: pcs_command_status.rc == 0
    failed_when: pcs_command_status.rc != 0 and 'already exists' not in pcs_command_status.stderr
  when:
    ansible_os_family == 'RedHat'

- block:
  - name: create sap hana topology resource
    command: >-
      crm configure primitive rsc_SAPHanaTopology_{{ sap_hana_sid }}_HDB{{ sap_hana_instance_number }}
      ocf:suse:SAPHanaTopology
      operations \$id=rsc_sap2_{{ sap_hana_sid }}_HDB{{ sap_hana_instance_number }}-operations
      op monitor interval=10 timeout=600
      op start interval=0 timeout=600
      op stop interval=0 timeout=300
      params SID={{ sap_hana_sid }} InstanceNumber={{ sap_hana_instance_number }}
      meta failure-timeout=3600
    register: crm_command_status
    changed_when: crm_command_status.rc == 0
    failed_when: |
      crm_command_status.rc != 0 and 'Found existing' not in crm_command_status.stderr

  - name: clone the sap hana topology resource
    command: >-
      crm configure clone cln_SAPHanaTopology_{{ sap_hana_sid }}_HDB{{ sap_hana_instance_number }}
      rsc_SAPHanaTopology_{{ sap_hana_sid }}_HDB{{ sap_hana_instance_number }}
      meta is-managed=true clone-node-max=1 target-role=Started interleave=true
    register: crm_command_status
    changed_when: crm_command_status.rc == 0
    failed_when: |
      crm_command_status.rc != 0 and 'Found existing' not in crm_command_status.stderr

  - name: create sap hana resource
    command: >-
      crm configure primitive rsc_SAPHana_{{ sap_hana_sid }}_HDB{{ sap_hana_instance_number }}
      ocf:suse:SAPHana
      operations \$id=rsc_sap_{{ sap_hana_sid }}_HDB{{ sap_hana_instance_number }}-operations
      op start interval=0 timeout=3600
      op stop interval=0 timeout=3600
      op promote interval=0 timeout=3600
      op monitor interval=60 role=Master timeout=700
      op monitor interval=61 role=Slave timeout=700
      params SID={{ sap_hana_sid }} InstanceNumber={{ sap_hana_instance_number }}
        PREFER_SITE_TAKEOVER=true DUPLICATE_PRIMARY_TIMEOUT=7200 AUTOMATED_REGISTER=true
      meta failure-timeout=3600
    register: crm_command_status
    changed_when: crm_command_status.rc == 0
    failed_when: |
      crm_command_status.rc != 0 and 'Found existing' not in crm_command_status.stderr
     
  - name: create master and slave sap hana resource
    command: >-
      crm configure ms msl_SAPHana_{{ sap_hana_sid }}_HDB{{ sap_hana_instance_number }}
      rsc_SAPHana_{{ sap_hana_sid }}_HDB{{ sap_hana_instance_number }}
      meta is-managed=true notify=true clone-max=2 clone-node-max=1
      target-role=Started interleave=true
    register: crm_command_status
    changed_when: crm_command_status.rc == 0
    failed_when: |
      crm_command_status.rc != 0 and 'Found existing' not in crm_command_status.stderr

  - name: create colocation constraint
    command: >-
      crm configure colocation col_saphana_ip_{{ sap_hana_sid }}_HDB{{ sap_hana_instance_number }}
      4000: g-primary:Started msl_SAPHana_{{ sap_hana_sid }}_HDB{{ sap_hana_instance_number }}:Master
    register: crm_command_status
    changed_when: crm_command_status.rc == 0
    failed_when: |
      crm_command_status.rc != 0 and 'Found existing' not in crm_command_status.stderr
     
  - name: create start order constraint
    command: >-
      crm configure order ord_SAPHana_{{ sap_hana_sid }}_HDB{{ sap_hana_instance_number }}
      Optional: cln_SAPHanaTopology_{{ sap_hana_sid }}_HDB{{ sap_hana_instance_number }}
      msl_SAPHana_{{ sap_hana_sid }}_HDB{{ sap_hana_instance_number }}
    register: crm_command_status
    changed_when: crm_command_status.rc == 0
    failed_when: |
      crm_command_status.rc != 0 and 'Found existing' not in crm_command_status.stderr
  when:
    ansible_os_family == 'Suse'
