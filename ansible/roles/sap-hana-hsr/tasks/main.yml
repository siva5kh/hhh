# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Enable HANA System Replication in the primary node
  shell: |
      source /usr/sap/{{ sap_hana_user }}/home/.sapenv.sh && \
      /usr/sap/{{ sap_hana_sid | upper }}/HDB{{ sap_hana_instance_number }}/exe/hdbnsutil \
      -sr_enable --name="{{ ansible_hostname }}"
  args:
    executable: /bin/bash
  become: yes
  become_user: "{{ sap_hana_user }}"
  register: enablesr
  changed_when: "'successfully enabled system as system replication source site' in enablesr.stdout"
  failed_when: |
    enablesr.rc != 0 and 'this site is already enabled' not in enablesr.stdout
  when: sap_hana_is_primary | bool
  async: 60
  poll: 2

- name: Ensure HANA instance is stopped in the secondary node
  shell: |
      /usr/sap/{{ sap_hana_sid | upper }}/HDB{{ sap_hana_instance_number }}/HDB stop
  args:
    executable: /bin/bash
  become: yes
  become_user: "{{ sap_hana_user }}"
  register: stopinstance
  changed_when: "'StopSystem' in stopinstance.stdout"
  when: not (sap_hana_is_primary | bool)
  async: 60
  poll: 2

- name: Register secondary node to HANA System Replication
  shell: |
      source /usr/sap/{{ sap_hana_user }}/home/.sapenv.sh && \
      /usr/sap/{{ sap_hana_sid | upper }}/HDB{{ sap_hana_instance_number }}/exe/hdbnsutil \
      -sr_register --name={{ ansible_hostname }} \
      --remoteHost={{ sap_hana_primary_instance_name }} --remoteInstance={{ sap_hana_instance_number }} \
      --replicationMode={{ sap_hana_hsr_replication_mode }} --operationMode={{ sap_hana_hsr_operation_mode }}
  args:
    executable: /bin/bash
  become: yes
  become_user: "{{ sap_hana_user }}"
  register: registersr
  changed_when: "'adding site' in registersr.stdout"
  when: not (sap_hana_is_primary | bool)
  async: 60
  poll: 2

- name: Determine if SAPHanaSR hook exists
  stat:
    path: '{{ item }}'
  register: sap_hana_sr_hook_paths
  loop:
  - /usr/share/SAPHanaSR/SAPHanaSR.py
  - /usr/share/SAPHanaSR/srHook/SAPHanaSR.py

- block:
  - name: Define SAPHanaSR hook directory
    set_fact:
      sap_hana_sr_hook_dir: '{{
        sap_hana_sr_hook_paths.results
        | map(attribute="stat")
        | selectattr("exists", "true")
        | map(attribute="path")
        | list | first | dirname
      }}'

  - name: Configure SAPHanaSR hook in global.ini
    blockinfile:
      path: '{{ sap_hana_shared_mountpoint }}/{{ sap_hana_sid }}/global/hdb/custom/config/global.ini'
      block: |
        [ha_dr_provider_SAPHanaSR]
        provider = SAPHanaSR
        path = {{ sap_hana_sr_hook_dir }}
        execution_order = 1

        [trace]
        ha_dr_saphanasr = info
    register: modify_global_ini

  - name: Ensure sudoers is configured for SAPHanaSR hook
    template:
      src: etc/sudoers.d/sap_hana_sr.j2
      dest: /etc/sudoers.d/sap_hana_sr
      owner: root
      group: root
      mode: '0440'
      validate: /usr/sbin/visudo -cf %s

  - name: Ensure HANA is restarted if global.ini is changed
    shell: |
      . /usr/sap/{{ sap_hana_user }}/home/.sapenv.sh
      sapcontrol -nr {{ sap_hana_instance_number }} -function StopSystem
      sapcontrol -nr {{ sap_hana_instance_number }} -function WaitforStopped 600 2
      sapcontrol -nr {{ sap_hana_instance_number }} -function StartSystem
    become_user: '{{ sap_hana_user }}'
    when: modify_global_ini is changed
    async: 60
    poll: 2
  when: true in sap_hana_sr_hook_paths.results | map(attribute="stat") | map(attribute="exists") | list

- name: Ensure HANA instance is started in the secondary node
  shell: |
    . /usr/sap/{{ sap_hana_user }}/home/.sapenv.sh
    sapcontrol -nr {{ sap_hana_instance_number }} -function StartSystem
  become_user: "{{ sap_hana_user }}"
  register: startinstance
  changed_when: >
    'StartSystem' in startinstance.stdout
  when:
  - not (sap_hana_is_primary | bool)
  - registersr is changed
  async: 30
  poll: 1
